/**
* Generated by go-doudou v2.3.0.
* You can edit it as your need.
 */
package main

import (
	"context"
	"github.com/samber/lo"
	"github.com/unionj-cloud/go-doudou/v2/framework/rest"
	"github.com/unionj-cloud/go-doudou/v2/toolkit/zlogger"
	service "redis-sentinel-go"
	"redis-sentinel-go/cache"
	"redis-sentinel-go/config"
	"redis-sentinel-go/transport/httpsrv"
	"time"
)

func main() {
	conf := config.LoadFromEnv()
	svc := service.NewRedisSentinelGo(conf)
	handler := httpsrv.NewRedisSentinelGoHandler(svc)
	srv := rest.NewRestServer()
	srv.AddRoute(httpsrv.Routes(handler)...)

	for {
		addr, err := cache.G_sentinel.GetMasterAddrByName(context.Background(), config.G_Config.Redis.Sentinel.Master).Result()
		if err != nil {
			zlogger.Err(err).Msg(err.Error())
		}
		lo.ForEach(addr, func(item string, index int) {
			zlogger.Info().Msg(item)
		})
		time.Sleep(3 * time.Second)
	}

	srv.Run()
}
